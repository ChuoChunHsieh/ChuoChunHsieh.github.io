{"remainingRequest":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/thread-loader/dist/cjs.js!/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/babel-loader/lib/index.js!/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/vuetify/lib/components/VData/VData.js","dependencies":[{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/vuetify/lib/components/VData/VData.js","mtime":1652859429000},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/cache-loader/dist/cjs.js","mtime":1652859425000},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/thread-loader/dist/cjs.js","mtime":1652859424000},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/babel-loader/lib/index.js","mtime":1652859425000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}