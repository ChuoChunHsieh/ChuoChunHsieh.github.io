{"remainingRequest":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/babel-loader/lib/index.js!/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/src/views/Blog_v1.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/src/views/Blog_v1.vue","mtime":1653663278933},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/cache-loader/dist/cjs.js","mtime":1652859425000},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/babel-loader/lib/index.js","mtime":1652859425000},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/cache-loader/dist/cjs.js","mtime":1652859425000},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/vue-loader/lib/index.js","mtime":1652859425000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IE1hcmtkb3duSXRWdWUgZnJvbSAnbWFya2Rvd24taXQtdnVlJzsKaW1wb3J0ICdtYXJrZG93bi1pdC12dWUvZGlzdC9tYXJrZG93bi1pdC12dWUuY3NzJzsKaW1wb3J0IGJsb2dEYXRhU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy9ibG9nRGF0YVNlcnZpY2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgTWFya2Rvd25JdFZ1ZTogTWFya2Rvd25JdFZ1ZQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbnRlbnQ6ICcjIHlvdXIgbWFya2Rvd24gY29udGVudCcsCiAgICAgIG1zZzogJycsCiAgICAgIGJsb2dMaXN0OiBbXSAvLyAgICBzcyA6JyMgeW91ciBtYXJrZG93biBjb250ZW50JywKICAgICAgLy8gPSA9ID0gPSA9PSA9ICAKICAgICAgLy8gICBzdGF0dXM6JycsCiAgICAgIC8vICAgdGltZTonJywKICAgICAgLy8gICB0aXRsZTogJycsCiAgICAgIC8vICAgdHlwZTonJywgCgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGJsb2dfb25EYXRhQ2hhbmdlOiBmdW5jdGlvbiBibG9nX29uRGF0YUNoYW5nZShpdGVtcykgewogICAgICB2YXIgX3R1dG9yaWFscyA9IFtdOwogICAgICBpdGVtcy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgdmFyIGtleSA9IGl0ZW0ua2V5OwogICAgICAgIHZhciBkYXRhID0gaXRlbS52YWwoKTsKCiAgICAgICAgX3R1dG9yaWFscy5wdXNoKHsKICAgICAgICAgIGtleToga2V5LAogICAgICAgICAgLy8gICBzbm8gOiBwYXJzZUludChkYXRhLnNubykgLAogICAgICAgICAgLy8gICBwcmljZSA6IHBhcnNlSW50KGRhdGEucHJpY2UpICwgCiAgICAgICAgICBjb250ZW50OiBkYXRhLmNvbnRlbnQgLy8gICBzZXJfbWRmIDogZGF0YS5zZXJfbWRmICwgCgogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgdGhpcy5ibG9nTGlzdCA9IF90dXRvcmlhbHM7CiAgICB9LAogICAgc2F2ZVBkOiBmdW5jdGlvbiBzYXZlUGQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgZGF0YSA9IHsKICAgICAgICBjb250ZW50OiB0aGlzLmNvbnRlbnQgLy8gc3RhdHVzIDogdGhpcy5zdGF0dXMsCiAgICAgICAgLy8gICAgIHRpbWUgOiB0aGlzLnRpbWUsIAogICAgICAgIC8vIAl0eXBlOiB0aGlzLnR5cGUsIAogICAgICAgIC8vIAl0aXRsZTogdGhpcy50aXRsZSwgCgogICAgICB9OwogICAgICBibG9nRGF0YVNlcnZpY2UuY3JlYXRlKGRhdGEpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLm1zZyA9ICLnrKzkuIDku73vvIznmbvoqJjmiJDlip8iOyAvLyB0aGlzLnN1Ym1pdHRlZCA9IHRydWU7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgX3RoaXMubXNnID0gZTsKICAgICAgfSk7CiAgICB9LAogICAgZGVsZXRlT2Q6IGZ1bmN0aW9uIGRlbGV0ZU9kKGUpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBibG9nRGF0YVNlcnZpY2UuZGVsZXRlKGUpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi4kZW1pdCgicmVmcmVzaExpc3QiKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgfSk7CiAgICB9LAogICAgVXBEdGFPZDI6IGZ1bmN0aW9uIFVwRHRhT2QyKGUpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB2YXIgZGF0YSA9IHsKICAgICAgICAvLyBzdGF0dXMgOiBlLnN0YXR1cywKICAgICAgICAvLyB0aW1lIDogZS50aW1lLCAKICAgICAgICAvLyB0eXBlOiBlLnR5cGUsIAogICAgICAgIC8vIHRpdGxlOiBlLnRpdGxlLCAKICAgICAgICBjb250ZW50OiBlLmNvbnRlbnQKICAgICAgfTsKICAgICAgYmxvZ0RhdGFTZXJ2aWNlLnVwZGF0ZShlLmtleSwgZGF0YSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMzLm1zZyA9IGUuYmtpbmdfbmFtZSArICdAJyArIGUuc2VudFRpbWUgKyAi5pu05paw6LOH5paZLOS4iuWCs+aIkOWKnyEiOyAvLyB0aGlzLiRlbWl0KCJyZWZyZXNoTGlzdCIpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBibG9nRGF0YVNlcnZpY2UuZ2V0QWxsKCkub24oInZhbHVlIiwgdGhpcy5ibG9nX29uRGF0YUNoYW5nZSk7CiAgfQp9Ow=="},{"version":3,"sources":["Blog_v1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,OAAA,aAAA,MAAA,iBAAA;AACA,OAAA,0CAAA;AAEA,OAAA,eAAA,MAAA,6BAAA;AAGA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,yBADA;AAEA,MAAA,GAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA,CAIA;AACA;AACA;AACA;AACA;AACA;;AATA,KAAA;AAYA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,6BACA,KADA,EACA;AACA,UAAA,UAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,GAAA,GAAA,IAAA,CAAA,GAAA;AACA,YAAA,IAAA,GAAA,IAAA,CAAA,GAAA,EAAA;;AACA,QAAA,UAAA,CAAA,IAAA,CAAA;AACA,UAAA,GAAA,EAAA,GADA;AAGA;AACA;AACA,UAAA,OAAA,EAAA,IAAA,CAAA,OALA,CAMA;;AANA,SAAA;AASA,OAZA;AAaA,WAAA,QAAA,GAAA,UAAA;AACA,KAjBA;AAkBA,IAAA,MAlBA,oBAkBA;AAAA;;AACA,UAAA,IAAA,GAAA;AACA,QAAA,OAAA,EAAA,KAAA,OADA,CAEA;AACA;AACA;AACA;;AALA,OAAA;AAQA,MAAA,eAAA,CAAA,MAAA,CAAA,IAAA,EACA,IADA,CACA,YAAA;AACA,QAAA,KAAA,CAAA,GAAA,GAAA,UAAA,CADA,CAEA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,QAAA,KAAA,CAAA,GAAA,GAAA,CAAA;AACA,OARA;AASA,KApCA;AAqCA,IAAA,QArCA,oBAqCA,CArCA,EAqCA;AAAA;;AACA,MAAA,eAAA,CAAA,MAAA,CAAA,CAAA,EACA,IADA,CACA,YAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,aAAA;AACA,OAHA,EAIA,KAJA,CAIA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OANA;AAOA,KA7CA;AA+CA,IAAA,QA/CA,oBA+CA,CA/CA,EA+CA;AAAA;;AACA,UAAA,IAAA,GAAA;AACA;AACA;AACA;AACA;AACA,QAAA,OAAA,EAAA,CAAA,CAAA;AALA,OAAA;AAQA,MAAA,eAAA,CAAA,MAAA,CAAA,CAAA,CAAA,GAAA,EAAA,IAAA,EACA,IADA,CACA,YAAA;AACA,QAAA,MAAA,CAAA,GAAA,GAAA,CAAA,CAAA,UAAA,GAAA,GAAA,GAAA,CAAA,CAAA,QAAA,GAAA,YAAA,CADA,CAEA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OAPA;AAQA;AAhEA,GAlBA;AAsFA,EAAA,OAtFA,qBAsFA;AACA,IAAA,eAAA,CAAA,MAAA,GAAA,EAAA,CAAA,OAAA,EAAA,KAAA,iBAAA;AAEA;AAzFA,CAAA","sourcesContent":["<template> \n\t<div class=\"\"> \n\t\t<div class=\"flex\"> \n\t\t\t<div class=\"w-1/2  m-5 bg-red-100  p-10\">\n\t\t\t\t<markdown-it-vue class=\"md-body\" :content=\"content\" />\n\t\t\t</div>\n\n\t\t\t<div class=\"w-1/2  m-5 bg-blue-100  p-10\">\n\t\t\t\t<v-textarea v-model=\"content\"></v-textarea>\n\t\t\t</div>\n\n\t\t\t<div class=\"w-1/2  m-5 bg-green-100  p-10\">\n\t\t\t\t<div v-for=\"(_blog, n) in blogList\" :key=\"n\">\n\t\t\t\t\t<markdown-it-vue class=\"md-body\" :content=\"_blog[n].content\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\n\t\t\t\n\t\t</div>\n\t\t\t\t{{ msg }}\n\t\t <v-btn  @click=\"savePd\" class=\"w-full btn btn-dark btn-lg btn-block\">儲存</v-btn>\n\t<markdown-it-vue class=\"md-body\" :content=\"blogList[0].content\" />\n\t{{ blogList }}\n\n\t\n\t\n\t</div>\n     \n</template>\n \n\n<script> \n\n \nimport MarkdownItVue from 'markdown-it-vue'\nimport 'markdown-it-vue/dist/markdown-it-vue.css'\n\nimport blogDataService from \"../services/blogDataService\"\n\n\nexport default {\n  components: {\n    MarkdownItVue\n  },\n  data() {\n    return {\n      content: '# your markdown content',\n\t  msg:'',\n\t  blogList:[],\n\t//    ss :'# your markdown content',\n\t   // = = = = == =  \n    //   status:'',\n    //   time:'',\n\t//   title: '',\n\t//   type:'', \n\t   \n    }\n  },\n  methods:{  \n    blog_onDataChange(items) { \n      let _tutorials = [];  \n      items.forEach((item) => {\n        let key = item.key;\n        let data = item.val();\n        _tutorials.push({\n          key: key,  \n          \n        //   sno : parseInt(data.sno) ,\n        //   price : parseInt(data.price) , \n          content : data.content ,\n        //   ser_mdf : data.ser_mdf , \n           \n        });  \n      });   \n      this.blogList=  _tutorials; \n    },\n\tsavePd() {\n       var data = { \n\t\t   content: this.content, \n        // status : this.status,\n        //     time : this.time, \n\t\t// \ttype: this.type, \n\t\t// \ttitle: this.title, \n            \n      }; \n      blogDataService.create(data)\n        .then(() => {\n          this.msg= \"第一份，登記成功\";\n          // this.submitted = true;\n        })\n        .catch(e => {\n          console.log(e);\n          this.msg=e;\n        }); \n    }, \n\tdeleteOd(e) {\n      blogDataService.delete(e)\n        .then(() => {\n          this.$emit(\"refreshList\");\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },  \n\n    UpDtaOd2(e) {\n          const data = {  \n            // status : e.status,\n            // time : e.time, \n\t\t\t// type: e.type, \n\t\t\t// title: e.title, \n            content: e.content,  \n          };\n\n          blogDataService.update(e.key, data)\n            .then(() => {\n              this.msg =  e.bking_name + '@'+ e.sentTime+\"更新資料,上傳成功!\";\n              // this.$emit(\"refreshList\");\n            })\n            .catch((e) => {\n              console.log(e);\n            });\n    },  \n      \n    \n  }, \n  mounted() {\n\t   blogDataService.getAll().on(\"value\", this.blog_onDataChange);  \n      \n  }\n}\n \n</script>\n "],"sourceRoot":"src/views"}]}