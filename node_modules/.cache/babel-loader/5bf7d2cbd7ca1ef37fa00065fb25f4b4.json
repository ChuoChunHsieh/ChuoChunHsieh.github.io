{"remainingRequest":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/node_modules/babel-loader/lib/index.js!/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/node_modules/eslint-loader/index.js??ref--13-0!/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/src/store/modules/sounds.js","dependencies":[{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/src/store/modules/sounds.js","mtime":1652845053000},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/node_modules/cache-loader/dist/cjs.js","mtime":1652859425000},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/node_modules/babel-loader/lib/index.js","mtime":1652859425000},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/node_modules/eslint-loader/index.js","mtime":1652859425000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvcWl1c2h1bnF1bi9EZXNrdG9wL19cdThCMURcdTUzNTNcdTU0MUIvQ2h1b0NodW5Ic2llaF91cDJnaXRodWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgeyBmaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZSc7CnZhciBjb2xsTmFtZSA9ICdTb3VuZHMnOwp2YXIgc291bmRzID0gewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHsKICAgIHNvdW5kczogW10KICB9LAogIGdldHRlcnM6IHsKICAgIGdldFNvdW5kczogZnVuY3Rpb24gZ2V0U291bmRzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5zb3VuZHM7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIFNFVF9TT1VORFM6IGZ1bmN0aW9uIFNFVF9TT1VORFMoc3RhdGUsIHNvdW5kcykgewogICAgICBzdGF0ZS5zb3VuZHMgPSBzb3VuZHM7CiAgICB9LAogICAgQUREX1NPVU5EOiBmdW5jdGlvbiBBRERfU09VTkQoc3RhdGUsIHNvdW5kKSB7CiAgICAgIHN0YXRlLnNvdW5kcy5wdXNoKHNvdW5kKTsKICAgIH0sCiAgICBVUERBVEVfU09VTkQ6IGZ1bmN0aW9uIFVQREFURV9TT1VORChzdGF0ZSwgcGF5bG9hZCkgewogICAgICBPYmplY3QuYXNzaWduKHN0YXRlLnNvdW5kc1twYXlsb2FkLmluZGV4XSwgcGF5bG9hZC5zb3VuZCk7CiAgICB9LAogICAgUkVNT1ZFX1NPVU5EOiBmdW5jdGlvbiBSRU1PVkVfU09VTkQoc3RhdGUsIHNvdW5kKSB7CiAgICAgIHZhciBpbmRleCA9IHN0YXRlLnNvdW5kcy5pbmRleE9mKHNvdW5kKTsKICAgICAgc3RhdGUuc291bmRzLnNwbGljZShpbmRleCwgMSk7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBhZGRTb3VuZDogZnVuY3Rpb24gYWRkU291bmQoX3JlZiwgc291bmQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY29tbWl0LCBkb2NSZWY7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBmaXJlc3RvcmUoKS5jb2xsZWN0aW9uKGNvbGxOYW1lKS5hZGQoc291bmQpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBkb2NSZWYgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgc291bmQuaWQgPSBkb2NSZWYuaWQ7CiAgICAgICAgICAgICAgICBjb21taXQoJ0FERF9TT1VORCcsIHNvdW5kKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxvYWRTb3VuZHM6IGZ1bmN0aW9uIGxvYWRTb3VuZHMoX3JlZjIpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgcXVlcnlTbmFwc2hvdCwgc291bmQsIHNvdW5kczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGZpcmVzdG9yZSgpLmNvbGxlY3Rpb24oY29sbE5hbWUpLmdldCgpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBxdWVyeVNuYXBzaG90ID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBzb3VuZHMgPSBxdWVyeVNuYXBzaG90LmRvY3MubWFwKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgICAgICAgICAgc291bmQgPSBkb2MuZGF0YSgpOwogICAgICAgICAgICAgICAgICBzb3VuZC5pZCA9IGRvYy5pZDsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHNvdW5kOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb21taXQoJ1NFVF9TT1VORFMnLCBzb3VuZHMpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICB1cGRhdGVTb3VuZDogZnVuY3Rpb24gdXBkYXRlU291bmQoX3JlZjMsIHBheWxvYWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIGNvbW1pdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGZpcmVzdG9yZSgpLmNvbGxlY3Rpb24oY29sbE5hbWUpLmRvYyhwYXlsb2FkLnNvdW5kLmlkKS5zZXQocGF5bG9hZC5zb3VuZCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGNvbW1pdCgnVVBEQVRFX1NPVU5EJywgcGF5bG9hZCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHJlbW92ZVNvdW5kOiBmdW5jdGlvbiByZW1vdmVTb3VuZChfcmVmNCwgc291bmQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgdmFyIGNvbW1pdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGZpcmVzdG9yZSgpLmNvbGxlY3Rpb24oY29sbE5hbWUpLmRvYyhzb3VuZC5pZCkuZGVsZXRlKCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGNvbW1pdCgnUkVNT1ZFX1NPVU5EJywgc291bmQpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07CmV4cG9ydCBkZWZhdWx0IHNvdW5kczs="},{"version":3,"sources":["/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/src/store/modules/sounds.js"],"names":["firestore","collName","sounds","namespaced","state","getters","getSounds","mutations","SET_SOUNDS","ADD_SOUND","sound","push","UPDATE_SOUND","payload","Object","assign","index","REMOVE_SOUND","indexOf","splice","actions","addSound","commit","collection","add","docRef","id","loadSounds","get","querySnapshot","docs","map","doc","data","updateSound","set","removeSound","delete"],"mappings":"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","sourcesContent":["import { firestore } from 'firebase';\r\n\r\nconst collName = 'Sounds';\r\n\r\nconst sounds = {\r\n    namespaced: true,\r\n    state: {\r\n        sounds: [],\r\n    },\r\n    getters: {\r\n        getSounds: (state) => {\r\n            return state.sounds;\r\n        }\r\n    },\r\n    mutations: {\r\n        SET_SOUNDS(state, sounds) {\r\n            state.sounds = sounds;\r\n        },\r\n        ADD_SOUND(state, sound) {\r\n            state.sounds.push(sound);\r\n        },\r\n        UPDATE_SOUND(state, payload) {\r\n            Object.assign(state.sounds[payload.index], payload.sound);\r\n        },\r\n        REMOVE_SOUND(state, sound) {\r\n            const index = state.sounds.indexOf(sound);\r\n            state.sounds.splice(index, 1);\r\n        }\r\n    },\r\n    actions: {\r\n        async addSound({commit}, sound) {\r\n            const docRef = await firestore().collection(collName).add(sound);\r\n            sound.id = docRef.id;\r\n            commit('ADD_SOUND', sound);\r\n        },\r\n        async loadSounds({commit}) {\r\n            const querySnapshot = await firestore().collection(collName).get();\r\n            let sound;\r\n            let sounds = querySnapshot.docs.map(function (doc) {\r\n                sound = doc.data();\r\n                sound.id = doc.id;\r\n                return sound;\r\n            });\r\n            commit('SET_SOUNDS', sounds);\r\n        },\r\n        async updateSound({commit}, payload) {\r\n            await firestore().collection(collName).doc(payload.sound.id).set(payload.sound);\r\n            commit('UPDATE_SOUND', payload);\r\n        },\r\n        async removeSound({commit}, sound) {\r\n            await firestore().collection(collName).doc(sound.id).delete();\r\n            commit('REMOVE_SOUND', sound);\r\n        }\r\n    }\r\n}\r\n\r\nexport default sounds;"]}]}