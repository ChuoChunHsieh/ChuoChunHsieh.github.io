{"remainingRequest":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_u2github/node_modules/babel-loader/lib/index.js!/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_u2github/node_modules/eslint-loader/index.js??ref--13-0!/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_u2github/src/store/modules/categories.js","dependencies":[{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_u2github/src/store/modules/categories.js","mtime":1652845053000},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_u2github/node_modules/cache-loader/dist/cjs.js","mtime":1652859425000},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_u2github/node_modules/babel-loader/lib/index.js","mtime":1652859425000},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_u2github/node_modules/eslint-loader/index.js","mtime":1652859425000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvcWl1c2h1bnF1bi9EZXNrdG9wL19cdThCMURcdTUzNTNcdTU0MUIvQ2h1b0NodW5Ic2llaF91MmdpdGh1Yi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCB7IGZpcmVzdG9yZSB9IGZyb20gJ2ZpcmViYXNlJzsKdmFyIGNvbGxOYW1lID0gJ0NhdGVnb3JpZXMnOwp2YXIgY2F0ZWdvcmllcyA9IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICBjYXRlZ29yaWVzOiBbXQogIH0sCiAgZ2V0dGVyczogewogICAgZ2V0Q2F0ZWdvcmllczogZnVuY3Rpb24gZ2V0Q2F0ZWdvcmllcyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuY2F0ZWdvcmllczsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgU0VUX0NBVEVHT1JJRVM6IGZ1bmN0aW9uIFNFVF9DQVRFR09SSUVTKHN0YXRlLCBjYXRlZ29yaWVzKSB7CiAgICAgIHN0YXRlLmNhdGVnb3JpZXMgPSBjYXRlZ29yaWVzOwogICAgfSwKICAgIEFERF9DQVRFR09SWTogZnVuY3Rpb24gQUREX0NBVEVHT1JZKHN0YXRlLCBjYXRlZ29yeSkgewogICAgICBzdGF0ZS5jYXRlZ29yaWVzLnB1c2goY2F0ZWdvcnkpOwogICAgfSwKICAgIFVQREFURV9DQVRFR09SWTogZnVuY3Rpb24gVVBEQVRFX0NBVEVHT1JZKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIE9iamVjdC5hc3NpZ24oc3RhdGUuY2F0ZWdvcmllc1twYXlsb2FkLmluZGV4XSwgcGF5bG9hZC5jYXRlZ29yeSk7CiAgICB9LAogICAgUkVNT1ZFX0NBVEVHT1JZOiBmdW5jdGlvbiBSRU1PVkVfQ0FURUdPUlkoc3RhdGUsIGNhdGVnb3J5KSB7CiAgICAgIHZhciBpbmRleCA9IHN0YXRlLmNhdGVnb3JpZXMuaW5kZXhPZihjYXRlZ29yeSk7CiAgICAgIHN0YXRlLmNhdGVnb3JpZXMuc3BsaWNlKGluZGV4LCAxKTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGFkZENhdGVnb3J5OiBmdW5jdGlvbiBhZGRDYXRlZ29yeShfcmVmLCBjYXRlZ29yeSkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQsIGRvY1JlZjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGZpcmVzdG9yZSgpLmNvbGxlY3Rpb24oY29sbE5hbWUpLmFkZChjYXRlZ29yeSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGRvY1JlZiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBjYXRlZ29yeS5pZCA9IGRvY1JlZi5pZDsKICAgICAgICAgICAgICAgIGNvbW1pdCgnQUREX0NBVEVHT1JZJywgY2F0ZWdvcnkpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbG9hZENhdGVnb3JpZXM6IGZ1bmN0aW9uIGxvYWRDYXRlZ29yaWVzKF9yZWYyKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBjb21taXQsIHF1ZXJ5U25hcHNob3QsIGNhdGVnb3J5LCBjYXRlZ29yaWVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gZmlyZXN0b3JlKCkuY29sbGVjdGlvbihjb2xsTmFtZSkuZ2V0KCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHF1ZXJ5U25hcHNob3QgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGNhdGVnb3JpZXMgPSBxdWVyeVNuYXBzaG90LmRvY3MubWFwKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgICAgICAgICAgY2F0ZWdvcnkgPSBkb2MuZGF0YSgpOwogICAgICAgICAgICAgICAgICBjYXRlZ29yeS5pZCA9IGRvYy5pZDsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhdGVnb3J5OwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb21taXQoJ1NFVF9DQVRFR09SSUVTJywgY2F0ZWdvcmllcyk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHVwZGF0ZUNhdGVnb3J5OiBmdW5jdGlvbiB1cGRhdGVDYXRlZ29yeShfcmVmMywgcGF5bG9hZCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICB2YXIgY29tbWl0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gZmlyZXN0b3JlKCkuY29sbGVjdGlvbihjb2xsTmFtZSkuZG9jKHBheWxvYWQuY2F0ZWdvcnkuaWQpLnNldChwYXlsb2FkLmNhdGVnb3J5KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgY29tbWl0KCdVUERBVEVfQ0FURUdPUlknLCBwYXlsb2FkKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgcmVtb3ZlQ2F0ZWdvcnk6IGZ1bmN0aW9uIHJlbW92ZUNhdGVnb3J5KF9yZWY0LCBjYXRlZ29yeSkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICB2YXIgY29tbWl0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gZmlyZXN0b3JlKCkuY29sbGVjdGlvbihjb2xsTmFtZSkuZG9jKGNhdGVnb3J5LmlkKS5kZWxldGUoKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgY29tbWl0KCdSRU1PVkVfQ0FURUdPUlknLCBjYXRlZ29yeSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgY2F0ZWdvcmllczs="},{"version":3,"sources":["/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_u2github/src/store/modules/categories.js"],"names":["firestore","collName","categories","namespaced","state","getters","getCategories","mutations","SET_CATEGORIES","ADD_CATEGORY","category","push","UPDATE_CATEGORY","payload","Object","assign","index","REMOVE_CATEGORY","indexOf","splice","actions","addCategory","commit","collection","add","docRef","id","loadCategories","get","querySnapshot","docs","map","doc","data","updateCategory","set","removeCategory","delete"],"mappings":"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","sourcesContent":["import { firestore } from 'firebase';\r\n\r\nconst collName = 'Categories';\r\n\r\nconst categories = {\r\n    namespaced: true,\r\n    state: {\r\n        categories: [],\r\n    },\r\n    getters: {\r\n        getCategories: (state) => {\r\n            return state.categories;\r\n        }\r\n    },\r\n    mutations: {\r\n        SET_CATEGORIES(state, categories) {\r\n            state.categories = categories;\r\n        },\r\n        ADD_CATEGORY(state, category) {\r\n            state.categories.push(category);\r\n        },\r\n        UPDATE_CATEGORY(state, payload) {\r\n            Object.assign(state.categories[payload.index], payload.category);\r\n        },\r\n        REMOVE_CATEGORY(state, category) {\r\n            const index = state.categories.indexOf(category);\r\n            state.categories.splice(index, 1);\r\n        }\r\n    },\r\n    actions: {\r\n        async addCategory({commit}, category) {\r\n            const docRef = await firestore().collection(collName).add(category);\r\n            category.id = docRef.id;\r\n            commit('ADD_CATEGORY', category);\r\n        },\r\n        async loadCategories({commit}) {\r\n            const querySnapshot = await firestore().collection(collName).get();\r\n            let category;\r\n            let categories = querySnapshot.docs.map(function (doc) {\r\n                category = doc.data();\r\n                category.id = doc.id;\r\n                return category;\r\n            });\r\n            commit('SET_CATEGORIES', categories);\r\n        },\r\n        async updateCategory({commit}, payload) {\r\n            await firestore().collection(collName).doc(payload.category.id).set(payload.category);\r\n            commit('UPDATE_CATEGORY', payload);\r\n        },\r\n        async removeCategory({commit}, category) {\r\n            await firestore().collection(collName).doc(category.id).delete();\r\n            commit('REMOVE_CATEGORY', category);\r\n        }\r\n    }\r\n}\r\n\r\nexport default categories;"]}]}