{"remainingRequest":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/node_modules/thread-loader/dist/cjs.js!/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/node_modules/babel-loader/lib/index.js!/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/node_modules/eslint-loader/index.js??ref--13-0!/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/src/store/modules/sounds.js","dependencies":[{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/src/store/modules/sounds.js","mtime":1652845053000},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/node_modules/cache-loader/dist/cjs.js","mtime":1652859425000},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/node_modules/thread-loader/dist/cjs.js","mtime":1652859424000},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/node_modules/babel-loader/lib/index.js","mtime":1652859425000},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh_up2github/node_modules/eslint-loader/index.js","mtime":1652859425000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvcWl1c2h1bnF1bi9EZXNrdG9wL19cdThCMURcdTUzNTNcdTU0MUIvQ2h1b0NodW5Ic2llaF91cDJnaXRodWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgeyBmaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZSc7CnZhciBjb2xsTmFtZSA9ICdTb3VuZHMnOwp2YXIgc291bmRzID0gewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHsKICAgIHNvdW5kczogW10KICB9LAogIGdldHRlcnM6IHsKICAgIGdldFNvdW5kczogZnVuY3Rpb24gZ2V0U291bmRzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5zb3VuZHM7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIFNFVF9TT1VORFM6IGZ1bmN0aW9uIFNFVF9TT1VORFMoc3RhdGUsIHNvdW5kcykgewogICAgICBzdGF0ZS5zb3VuZHMgPSBzb3VuZHM7CiAgICB9LAogICAgQUREX1NPVU5EOiBmdW5jdGlvbiBBRERfU09VTkQoc3RhdGUsIHNvdW5kKSB7CiAgICAgIHN0YXRlLnNvdW5kcy5wdXNoKHNvdW5kKTsKICAgIH0sCiAgICBVUERBVEVfU09VTkQ6IGZ1bmN0aW9uIFVQREFURV9TT1VORChzdGF0ZSwgcGF5bG9hZCkgewogICAgICBPYmplY3QuYXNzaWduKHN0YXRlLnNvdW5kc1twYXlsb2FkLmluZGV4XSwgcGF5bG9hZC5zb3VuZCk7CiAgICB9LAogICAgUkVNT1ZFX1NPVU5EOiBmdW5jdGlvbiBSRU1PVkVfU09VTkQoc3RhdGUsIHNvdW5kKSB7CiAgICAgIHZhciBpbmRleCA9IHN0YXRlLnNvdW5kcy5pbmRleE9mKHNvdW5kKTsKICAgICAgc3RhdGUuc291bmRzLnNwbGljZShpbmRleCwgMSk7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBhZGRTb3VuZDogZnVuY3Rpb24gYWRkU291bmQoX3JlZiwgc291bmQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY29tbWl0LCBkb2NSZWY7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBmaXJlc3RvcmUoKS5jb2xsZWN0aW9uKGNvbGxOYW1lKS5hZGQoc291bmQpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBkb2NSZWYgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgc291bmQuaWQgPSBkb2NSZWYuaWQ7CiAgICAgICAgICAgICAgICBjb21taXQoJ0FERF9TT1VORCcsIHNvdW5kKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxvYWRTb3VuZHM6IGZ1bmN0aW9uIGxvYWRTb3VuZHMoX3JlZjIpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgcXVlcnlTbmFwc2hvdCwgc291bmQsIHNvdW5kczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGZpcmVzdG9yZSgpLmNvbGxlY3Rpb24oY29sbE5hbWUpLmdldCgpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBxdWVyeVNuYXBzaG90ID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBzb3VuZHMgPSBxdWVyeVNuYXBzaG90LmRvY3MubWFwKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgICAgICAgICAgc291bmQgPSBkb2MuZGF0YSgpOwogICAgICAgICAgICAgICAgICBzb3VuZC5pZCA9IGRvYy5pZDsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHNvdW5kOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb21taXQoJ1NFVF9TT1VORFMnLCBzb3VuZHMpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICB1cGRhdGVTb3VuZDogZnVuY3Rpb24gdXBkYXRlU291bmQoX3JlZjMsIHBheWxvYWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIGNvbW1pdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGZpcmVzdG9yZSgpLmNvbGxlY3Rpb24oY29sbE5hbWUpLmRvYyhwYXlsb2FkLnNvdW5kLmlkKS5zZXQocGF5bG9hZC5zb3VuZCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGNvbW1pdCgnVVBEQVRFX1NPVU5EJywgcGF5bG9hZCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHJlbW92ZVNvdW5kOiBmdW5jdGlvbiByZW1vdmVTb3VuZChfcmVmNCwgc291bmQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgdmFyIGNvbW1pdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGZpcmVzdG9yZSgpLmNvbGxlY3Rpb24oY29sbE5hbWUpLmRvYyhzb3VuZC5pZCkuZGVsZXRlKCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGNvbW1pdCgnUkVNT1ZFX1NPVU5EJywgc291bmQpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07CmV4cG9ydCBkZWZhdWx0IHNvdW5kczs="},null]}