{"remainingRequest":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/src/views/LdPg_CASE3.vue?vue&type=template&id=7b71188d&scoped=true&","dependencies":[{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/src/views/LdPg_CASE3.vue","mtime":1652893479787},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/cache-loader/dist/cjs.js","mtime":1652859425070},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1652859425986},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/cache-loader/dist/cjs.js","mtime":1652859425070},{"path":"/Users/qiushunqun/Desktop/_謝卓君/ChuoChunHsieh/node_modules/vue-loader/lib/index.js","mtime":1652859425689}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibXgtNSIgfSwgWwogICAgX2MoImRpdiIsIHsgYXR0cnM6IHsgaWQ6ICJ3cmFwcGVyIiB9IH0sIFsKICAgICAgX2MoImRpdiIsIHsgYXR0cnM6IHsgaWQ6ICJjb250YWluZXIiIH0gfSwgWwogICAgICAgIF9jKCJzZWN0aW9uIiwgeyBzdGF0aWNDbGFzczogIm9wZW4tYm9vayIgfSwgWwogICAgICAgICAgX3ZtLl9tKDApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJhcnRpY2xlIiwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJoMiIsIHsgc3RhdGljQ2xhc3M6ICJjaGFwdGVyLXRpdGxlIiB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoImh5YmlyZCBlZHVjYXRpb25hbCBtYW5hZ2VtZW50IikKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgJyBTdWJsaW1lIFRleHQgMiB3YXMgb3BlbmVkIGFuZCBhIG5ldyBkb2N1bWVudCB3YXMgY3JlYXRlZC4gIkkgbG92ZSB0aGlzIHRpbWUgb2YgeWVhciwiIEVyaW4gZ2xlZWZ1bGx5IHRob3VnaHQgdG8gaGVyc2VsZi4gJwogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAiIFRoZSBcInRpbWUgb2YgeWVhclwiIHRoYXQgaXMgYmVpbmcgcmVmZXJlbmNlZCByZWxhdGVzIHRvIEVyaW4ncyBqb2Igd2hlbiB0aGUgcGlsZSBvZiBwcm9qZWN0cyB0ZW1wb3JhcmlseSBzbG93IGRvd24uIFRoaXMgZG9lc24ndCBoYXBwZW4gdG8ganVzdCBoZXIuIFRoZSByZWR1Y3Rpb24gb2Ygd29yayAiCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICIgVCBrZWQgcGVucy4gU2hlIGVudmllZCB0aGUgc2tpbGxzIG9mIHRob3NlIHVzaW5nIGNvbXBpbGVycyBzaGUgaGFzIHlldCB0byBkYWJibGUgaW4uIFRoZW4gc2hlIHB1dCB0b2dldGhlciBhIGxpc3Qgb2Ygd2hhdCBzaGUgd291bGQgbGlrZSB0byBhY2hpZXZlLiAiCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICcgRSByYXp5LCBidXQgd2hhdCBpZiBJIGRldmVsb3AgYSBzZWN0aW9uIG9mIHRleHQgdGhhdCBsb29rcyBsaWtlIGEgYm9vaz8iICcKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfdm0uX20oMSksCiAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAidGV4dC14cyIgfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KCIgIiArIF92bS5fcyhfdm0udURhdFswXS5udDIpICsgIiAiKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJ2LWNhcmQtdGl0bGUiLCBbX3ZtLl92KCLmnIDmlrDoqIrmga8iKV0pLAogICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAiIFNoZSBiZWdhbiB0byBqb3QgZG93biBhIGxpc3Qgb2YgZWxlbWVudHMgdGhhdCBhcmUgdHlwaWNhbGx5IGluIGEgbm92ZWw6ICIKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfdm0uX20oMiksCiAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICcgU2hlIHdhcyB0aGVuIHBpY3R1cmluZyBoZXJzZWxmIG1ha2luZyBtYXJrcyBvbiBhIG5vdmVsIGxpa2Ugc2hlIHVzZWQgdG8gaW4gc2Nob29sLiBJbiBoZXIgdHJ1ZSBmYXNoaW9uLCBzaGUgZ290IGNhcnJpZWQgYXdheSB3aXRoICJXaGF0IGlmcy4iICcKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfdm0uX20oMyksCiAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICIgVGhlIHRydWUgb2JzdGFjbGUgc2hvd2VkIGl0cyBmb3JtLiBSZXNwb25zaXZlbmVzcy4gSG93IG9uIEVhcnRoIHdpbGwgc2hlIG1ha2UgdGhpcyB3b3JrPyAiCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoInYtY2FyZC10aXRsZSIsIFtfdm0uX3YoIuWAi+S6uuewoeS7iyIpXSksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAidi1jYXJkLXRleHQiLAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1yb3ciLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJteC0wIiwgYXR0cnM6IHsgYWxpZ246ICJjZW50ZXIiIH0gfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0udURhdFswXS5pbnRybykgKyAiICIpXQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoInYtY2FyZC10aXRsZSIsIFtfdm0uX3YoIueGseiht+itsOmhjCIpXSksCiAgICAgICAgICAgICAgX2MoInYtY2FyZC10ZXh0IiwgWwogICAgICAgICAgICAgICAgX2MoImRpdiIsIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0udURhdFswXS5udDEpICsKICAgICAgICAgICAgICAgICAgICAgICIgIiArCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoX3ZtLnVEYXRbMF0ubnQyKSArCiAgICAgICAgICAgICAgICAgICAgICAiICIKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApLAogICAgICAgICAgX3ZtLl9tKDQpCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0pCiAgXSkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImhlYWRlciIsIFsKICAgICAgX2MoImgxIiwgW192bS5fdigi5ZyL56uL5riF6I+v5aSn5a245pWZ6IKy6IiH5a2457+S56eR5oqA57O7LuisneWNk+WQmyDlia/mlZnmjogiKV0pLAogICAgICBfYygiaDYiLCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgImJnLW9yYW5nZS01MDAgaG92ZXI6Ymctb3JhbmdlLTQwMCB0ZXh0LXdoaXRlIGZvbnQtYm9sZCBweS0xIHB4LTIgIG14LTIgYW5pbWF0ZS1ib3VuY2UgIGhvdmVyOmJvcmRlci1vcmFuZ2UtNTAwIHJvdW5kZWQiCiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIOaKvSDkuIDmlofnq6AgIildCiAgICAgICAgKSwKICAgICAgICBfYygKICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAiYmctZ3JheS01MDAgaG92ZXI6YmctZ3JheS00MDAgdGV4dC13aGl0ZSBmb250LWJvbGQgcHktMSBweC0yIG14LTIgYW5pbWF0ZS1ib3VuY2UgIGhvdmVyOmJvcmRlci1ncmF5LTUwMCByb3VuZGVkIgogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiDmir0g5LiA6Zec6Y215a2XICIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgQ2h1by1DaHVuIEplYW4gSHNpZWggIikKICAgICAgXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkbCIsIFsKICAgICAgX2MoImR0IiwgW19jKCJzdHJvbmciLCBbX3ZtLl92KCJQb2xpY3kgQm9ycm93aW5nIildKV0pLAogICAgICBfYygiZGQiLCBbCiAgICAgICAgX2MoImVtIiwgW192bS5fdigibm91biIpXSksCiAgICAgICAgX2MoImJyIiksCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIiBhbiBvYmplY3Qgb3IgZmVhdHVyZSB0aGF0IGltaXRhdGVzIHRoZSBkZXNpZ24gb2YgYSBzaW1pbGFyIGFydGlmYWN0IG1hZGUgZnJvbSBhbm90aGVyIG1hdGVyaWFsLiAiCiAgICAgICAgKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoInVsIiwgWwogICAgICBfYygibGkiLCBbX3ZtLl92KCJTZXJpZiB0eXBlZmFjZXMiKV0pLAogICAgICBfYygibGkiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIiBIZWFkZXIgYXJlYSB3aXRoIHRoZSB0aXRsZSBvZiB0aGUgYm9vayBvbiB0aGUgbGVmdCwgYW5kIHRoZSBhdXRob3Igb2Ygc2FpZCBib29rIG9uIHRoZSByaWdodC4gIgogICAgICAgICksCiAgICAgICAgX2MoImVtIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiRXJpbiBpcyBhd2FyZSB0aGF0IGNvbnRlbnQgd2l0aGluIHRoZSBoZWFkZXIgb2YgdGhlIHNhbWUgcGFnZSBhcyBhIGNoYXB0ZXIgdGl0bGUgZG9lcyBub3QgYXBwZWFyLCBidXQgc2hlIG1hZGUgYW4gZXhjZXB0aW9uIgogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiLiAiKQogICAgICBdKSwKICAgICAgX2MoImxpIiwgW192bS5fdigiQW4gYWRvcm5lZCBjaGFwdGVyIHRpdGxlIildKSwKICAgICAgX2MoImxpIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJBIGRyb3BjYXAgZm9yIHRoZSBmaXJzdCBsZXR0ZXIgb2YgdGhlIGZpcnN0IHBhcmFncmFwaCBvZiB0aGUgY2hhcHRlciIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfYygibGkiLCBbX3ZtLl92KCJJbmRlbnRlZCBwYXJhZ3JhcGhzIildKSwKICAgICAgX2MoImxpIiwgW192bS5fdigiUGFnZSBudW1iZXJzIildKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoInVsIiwgWwogICAgICBfYygibGkiLCBbCiAgICAgICAgX3ZtLl92KCcgIldoYXQgaWYgaGlnaGxpZ2h0aW5nIHRoZSB0ZXh0IGFjdHVhbGx5IGxvb2tlZCAnKSwKICAgICAgICBfYygibWFyayIsIFtfdm0uX3YoImxpa2UgYSBoaWdobGlnaHRlciIpXSksCiAgICAgICAgX3ZtLl92KCc/IiAnKSwKICAgICAgICBfYygidWwiLCBbCiAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgIF92bS5fdignIldoYXQgaWYgSSB3YW50ZWQgaXQgdG8gYmUgJyksCiAgICAgICAgICAgIF9jKCJtYXJrIiwgeyBzdGF0aWNDbGFzczogInBpbmsiIH0sIFtfdm0uX3YoInBpbmsiKV0pLAogICAgICAgICAgICBfdm0uX3YoJz8iJykKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICBfdm0uX3YoJyInKSwKICAgICAgICAgICAgX2MoIm1hcmsiLCB7IHN0YXRpY0NsYXNzOiAiYmx1ZSIgfSwgW192bS5fdigiQmx1ZSIpXSksCiAgICAgICAgICAgIF92bS5fdignPyInKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgIF92bS5fdignIicpLAogICAgICAgICAgICBfYygibWFyayIsIHsgc3RhdGljQ2xhc3M6ICJncmVlbiIgfSwgW192bS5fdigiR3JlZW4iKV0pLAogICAgICAgICAgICBfdm0uX3YoJz8iJykKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICBfdm0uX3YoJyInKSwKICAgICAgICAgICAgX2MoIm1hcmsiLCB7IHN0YXRpY0NsYXNzOiAib3JhbmdlIiB9LCBbX3ZtLl92KCJPcmFuZ2UiKV0pLAogICAgICAgICAgICBfdm0uX3YoJz8iJykKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJsaSIsIFsKICAgICAgICBfdm0uX3YoJyJXaGF0IGlmIEkgZm91bmQgJyksCiAgICAgICAgX2MoInMiLCBbX3ZtLl92KCJhIHR5cG8iKV0pLAogICAgICAgIF9jKCJzdXAiLCBbX3ZtLl92KCJhbiBlcnJvciBpbiB0aGUgY29udGVudCIpXSksCiAgICAgICAgX3ZtLl92KCcgYW5kIHdhbnRlZCB0byBtYWtlIGEgY29ycmVjdGlvbj8iJykKICAgICAgXSksCiAgICAgIF9jKCJsaSIsIFtfdm0uX3YoJyJXaGF0IGlmIEkgd2FzIHZpZXdpbmcgdGhpcyBvbiBtb2JpbGXigJQiJyldKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImZvb3RlciIsIFsKICAgICAgX2MoIm9sIiwgeyBhdHRyczogeyBpZDogInBhZ2UtbnVtYmVycyIgfSB9LCBbCiAgICAgICAgX2MoImxpIiwgW192bS5fdigiMSIpXSksCiAgICAgICAgX2MoImxpIiwgW192bS5fdigiMiIpXSkKICAgICAgXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}